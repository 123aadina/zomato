[{"/home/hamida/Documents/project3/src/index.js":"1","/home/hamida/Documents/project3/src/App.js":"2","/home/hamida/Documents/project3/src/reportWebVitals.js":"3","/home/hamida/Documents/project3/src/components/Home.js":"4","/home/hamida/Documents/project3/src/components/Search.js":"5","/home/hamida/Documents/project3/src/components/Details.js":"6","/home/hamida/Documents/project3/src/components/RestaurantList.js":"7","/home/hamida/Documents/project3/src/components/Restaurant.js":"8","/home/hamida/Documents/project3/src/components/CitiesList.js":"9","/home/hamida/Documents/project3/src/context/RestaurantContext.js":"10"},{"size":533,"mtime":1611155447059,"results":"11","hashOfConfig":"12"},{"size":320,"mtime":1611325154431,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1610975045804,"results":"14","hashOfConfig":"12"},{"size":1397,"mtime":1611325475986,"results":"15","hashOfConfig":"12"},{"size":682,"mtime":1611325334256,"results":"16","hashOfConfig":"12"},{"size":555,"mtime":1611267275488,"results":"17","hashOfConfig":"12"},{"size":1401,"mtime":1611326309899,"results":"18","hashOfConfig":"12"},{"size":586,"mtime":1611266201670,"results":"19","hashOfConfig":"12"},{"size":597,"mtime":1611325334260,"results":"20","hashOfConfig":"12"},{"size":1876,"mtime":1611326217158,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"13s4ya7",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"24"},"/home/hamida/Documents/project3/src/index.js",[],["48","49"],"/home/hamida/Documents/project3/src/App.js",[],"/home/hamida/Documents/project3/src/reportWebVitals.js",[],"/home/hamida/Documents/project3/src/components/Home.js",["50","51","52","53"],"import React, { useState, useContext } from \"react\";\nimport RestaurantList from \"./RestaurantList\";\n\nimport Search from \"./Search\";\nimport Restaurant from \"./Restaurant\";\nimport Button from \"@material-ui/core/Button\";\nimport { RestaurantContext} from \"../context/RestaurantContext\";\nimport CitiesList from \"./CitiesList\";\n\nconst Home = () => {\n  /*  const [restaurant, setRestaurant] = useState(null)\n    const [cities, setCities] = useState(null)\n    const [cityId, setCityId] = useState(null)\n\n\n\n    let myHeader = new Headers()\n    myHeader.append(\"user-key\", \"e229f15cc483c5d7ec670a96e60bdece\")\n\n\n    let requestOption = {\n        method: 'GET',\n        headers: myHeader,\n        redirect: 'follow'\n    };\n\n    const getCitys = async (city) => {\n        const response = await fetch(\n            `https://developers.zomato.com/api/v2.1/cities?q=${city}`,\n            requestOption\n        );\n        const data = await response.json();\n\n        console.log(data.location_suggestions, \"data\");\n        setCities(data.location_suggestions);\n    };\n\n */\nconst {cities , cityId, restaurants} = useContext(RestaurantContext)\n\n  return (\n    <div className=\"container\">\n        <Search />\n<CitiesList/>\n        {cityId && !restaurants && (\n          <RestaurantList cityId={cityId}  />\n        )}\n        {/* {restaurant && <Restaurant item={restaurant} />} */}\n    </div>\n  );\n};\nexport default Home;\n","/home/hamida/Documents/project3/src/components/Search.js",["54"],"import React,{useState, useContext} from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport {RestaurantContext, RestaurantContextProvider} from \"../context/RestaurantContext\"\nconst Search = () => {\n    const {getCitys} = useContext(RestaurantContext)\n    const [city, setCity] = useState(\"\");\n    \n    return (\n        <div className=\"input\">\n            <TextField type=\"text\" onChange={(event) => setCity(event.target.value)} placeholder=\"search...\"/>\n            <Button size=\"small\" variant=\"contained\" color=\"primary\" onClick={() => getCitys(city)}>Search</Button>\n        </div>\n    )\n}\n\nexport default Search;\n","/home/hamida/Documents/project3/src/components/Details.js",["55"],"import React from \"react\";\nimport { Card } from \"@material-ui/core\";\n\nconst Details = ({ item }) => {\n  console.log(\"item\", item);\n\n  return (\n    <div className=\"info\">\n      <div className=\"list\">Name: {item.name}</div>\n      <div className=\"list\"> Address: {item.address}</div>\n      <div className=\"list\"> Url: {item.url}</div>\n      <div className=\"list\"> Price: {item.price_range}</div>\n      {/* <div> Currency: {item.currency}</div>  */}\n      <div className=\"list\"> Highlights: {item.highlights}</div>\n    </div>\n  );\n};\n\nexport default Details;\n","/home/hamida/Documents/project3/src/components/RestaurantList.js",["56","57"],"import React, {  useContext} from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport {RestaurantContext} from \"../context/RestaurantContext\";\n\nconst RestaurantList = () => {\n/*   const [rest, setRest] = useState([]);\n\n  let myHeader = new Headers();\n  myHeader.append(\"user-key\", \"e229f15cc483c5d7ec670a96e60bdece\");\n\n  let requestOption = {\n    method: \"GET\",\n    headers: myHeader,\n    redirect: \"follow\",\n  };\n\n  const getRestaurants = async () => {\n    const response = await fetch(\n      `https://developers.zomato.com/api/v2.1/search?res_id=${cityId}&entity_type=city`,\n      requestOption\n    );\n    const data = await response.json();\n    console.log(\"data\", cityId);\n    console.log(\"data\", data);\n    console.log(\"data.restaurants\", data.restaurants);\n    setRest(data.restaurants);\n  };\n  useEffect(() => {\n    getRestaurants();\n  }, []);\n\n  const handleRestSelect = (item) => {\n    setRestaurant(item);\n  }; */\nconst {rest, handleRestSelect} = useContext(RestaurantContext)\n\n  return (\n    <div>\n      {rest.length !== 0 &&\n        rest.map((item, id) => {\n          return (\n            <div className=\"restName\">\n              <div>{item.restaurant.name}</div>\n              <Button onClick={() => handleRestSelect(item.restaurant)}>\n                Select\n              </Button>\n            </div>\n          );\n        })}\n    </div>\n  );\n};\nexport default RestaurantList;\n","/home/hamida/Documents/project3/src/components/Restaurant.js",[],"/home/hamida/Documents/project3/src/components/CitiesList.js",[],"/home/hamida/Documents/project3/src/context/RestaurantContext.js",["58","59"],"import React, { useState, useEffect, createContext } from \"react\";\n\nconst initContext = {\n  restaurants: [],\n  cities: [],\n  cityId: \"\",\n};\n\nexport const RestaurantContext = createContext(initContext);\n\nexport const RestaurantContextProvider = ({ children }) => {\n  //const [characters, setCharacters] = useState(initContext.characters)\n  const [restaurants, setRestaurants] = useState(initContext.restaurants);\n  const [cities, setCities] = useState(initContext.cities);\n  const [cityId, setCityId] = useState(initContext.cityId);\n\n  let myHeader = new Headers();\n  myHeader.append(\"user-key\", \"e229f15cc483c5d7ec670a96e60bdece\");\n\n  let requestOption = {\n    method: \"GET\",\n    headers: myHeader,\n    redirect: \"follow\",\n  };\n\n  const getCitys = async (city) => {\n    const response = await fetch(\n      `https://developers.zomato.com/api/v2.1/cities?q=${city}`,\n      requestOption\n    );\n    const data = await response.json();\n\n    console.log(data.location_suggestions, \"data\");\n    setCities(data.location_suggestions);\n  };\n\n  const handleCitySelect = (city) => {\n    setCityId(city.id);\n  };\n\n  return (\n    <RestaurantContext.Provider\n      value={{ restaurants, cityId, cities, getCitys, handleCitySelect }}\n    >\n      {children}\n    </RestaurantContext.Provider>\n  );\n};\n",{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":1,"column":17,"nodeType":"66","messageId":"67","endLine":1,"endColumn":25},{"ruleId":"64","severity":1,"message":"68","line":5,"column":8,"nodeType":"66","messageId":"67","endLine":5,"endColumn":18},{"ruleId":"64","severity":1,"message":"69","line":6,"column":8,"nodeType":"66","messageId":"67","endLine":6,"endColumn":14},{"ruleId":"64","severity":1,"message":"70","line":39,"column":8,"nodeType":"66","messageId":"67","endLine":39,"endColumn":14},{"ruleId":"64","severity":1,"message":"71","line":4,"column":28,"nodeType":"66","messageId":"67","endLine":4,"endColumn":53},{"ruleId":"64","severity":1,"message":"72","line":2,"column":10,"nodeType":"66","messageId":"67","endLine":2,"endColumn":14},{"ruleId":"64","severity":1,"message":"65","line":1,"column":17,"nodeType":"66","messageId":"67","endLine":1,"endColumn":25},{"ruleId":"64","severity":1,"message":"73","line":1,"column":27,"nodeType":"66","messageId":"67","endLine":1,"endColumn":36},{"ruleId":"64","severity":1,"message":"73","line":1,"column":27,"nodeType":"66","messageId":"67","endLine":1,"endColumn":36},{"ruleId":"64","severity":1,"message":"74","line":13,"column":23,"nodeType":"66","messageId":"67","endLine":13,"endColumn":37},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Restaurant' is defined but never used.","'Button' is defined but never used.","'cities' is assigned a value but never used.","'RestaurantContextProvider' is defined but never used.","'Card' is defined but never used.","'useEffect' is defined but never used.","'setRestaurants' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]