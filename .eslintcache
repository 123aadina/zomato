[{"/home/hamida/Documents/project3/src/index.js":"1","/home/hamida/Documents/project3/src/App.js":"2","/home/hamida/Documents/project3/src/reportWebVitals.js":"3","/home/hamida/Documents/project3/src/components/Home.js":"4","/home/hamida/Documents/project3/src/components/Search.js":"5","/home/hamida/Documents/project3/src/components/Details.js":"6","/home/hamida/Documents/project3/src/components/RestaurantList.js":"7","/home/hamida/Documents/project3/src/components/Restaurant.js":"8","/home/hamida/Documents/project3/src/components/CitiesList.js":"9","/home/hamida/Documents/project3/src/context/RestaurantContext.js":"10","/home/hamida/Documents/project3/src/components/Footer.js":"11","/home/hamida/Documents/project3/src/components/Register.js":"12","/home/hamida/Documents/project3/src/components/config/fbConfig.js":"13","/home/hamida/Documents/project3/src/components/Login.js":"14","/home/hamida/Documents/project3/src/context/AuthContext.js":"15","/home/hamida/Documents/project3/src/components/NavTabs.js":"16","/home/hamida/Documents/project3/src/components/ChatRoom.js":"17","/home/hamida/Documents/project3/src/components/ChatMessage.js":"18","/home/hamida/Documents/project3/src/context/ChatContext.js":"19"},{"size":533,"mtime":1611155447059,"results":"20","hashOfConfig":"21"},{"size":1638,"mtime":1612885725317,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1610975045804,"results":"23","hashOfConfig":"21"},{"size":568,"mtime":1612174570080,"results":"24","hashOfConfig":"21"},{"size":1079,"mtime":1612180079730,"results":"25","hashOfConfig":"21"},{"size":593,"mtime":1611844981528,"results":"26","hashOfConfig":"21"},{"size":715,"mtime":1611582497725,"results":"27","hashOfConfig":"21"},{"size":730,"mtime":1612179926180,"results":"28","hashOfConfig":"21"},{"size":1588,"mtime":1612538265804,"results":"29","hashOfConfig":"21"},{"size":2151,"mtime":1611830489950,"results":"30","hashOfConfig":"21"},{"size":240,"mtime":1611591837477,"results":"31","hashOfConfig":"21"},{"size":1873,"mtime":1612800790067,"results":"32","hashOfConfig":"21"},{"size":607,"mtime":1612804430638,"results":"33","hashOfConfig":"21"},{"size":1661,"mtime":1612880911353,"results":"34","hashOfConfig":"21"},{"size":2529,"mtime":1612887140071,"results":"35","hashOfConfig":"21"},{"size":1925,"mtime":1612368774941,"results":"36","hashOfConfig":"21"},{"size":2779,"mtime":1612948791933,"results":"37","hashOfConfig":"21"},{"size":513,"mtime":1612885559096,"results":"38","hashOfConfig":"21"},{"size":1936,"mtime":1612887160695,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"13s4ya7",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"42"},"/home/hamida/Documents/project3/src/index.js",[],["86","87"],"/home/hamida/Documents/project3/src/App.js",["88"],"import \"./App.css\";\nimport React from \"react\";\nimport Home from \"./components/Home\";\nimport { RestaurantContextProvider } from \"./context/RestaurantContext\";\nimport { AuthProvider } from \"./context/AuthContext\";\nimport Footer from \"./components/Footer\";\nimport RestaurantList from \"./components/RestaurantList\";\nimport Restaurant from \"./components/Restaurant\";\nimport CitiesList from \"./components/CitiesList\";\nimport ChatRoom from \"./components/ChatRoom\";\n\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Register from \"./components/Register\";\nimport Login from \"./components/Login\";\nimport NavTabs from \"./components/NavTabs\";\nimport { ChatContextProvider } from \"./context/ChatContext\";\n\n\nfunction App() {\n \n   return (\n     <div className=\"App\">\n     <BrowserRouter>\n     <AuthProvider>\n       <RestaurantContextProvider> \n         <ChatContextProvider>\n         <NavTabs/>\n         <Switch>\n           <Route path=\"/\" exact component={Home}></Route>\n           <Route\n             path=\"/restaurantList\"\n             exact\n             component={RestaurantList}\n           ></Route>\n           <Route path=\"/restaurant\" exact component={Restaurant}></Route>\n           <Route path=\"/citiesList\" exact component={CitiesList}></Route>\n           <Route path=\"/register\" exact component={Register}></Route>\n           <Route path=\"/login\" exact component={Login}></Route>\n           <Route path=\"/chatRoom\" exact component={ChatRoom}></Route>\n         </Switch>\n         </ChatContextProvider>\n       </RestaurantContextProvider>\n     </AuthProvider>\n   </BrowserRouter>\n </div>\n);\n}\nexport default App;","/home/hamida/Documents/project3/src/reportWebVitals.js",[],"/home/hamida/Documents/project3/src/components/Home.js",[],"/home/hamida/Documents/project3/src/components/Search.js",[],"/home/hamida/Documents/project3/src/components/Details.js",["89"],"import React from \"react\";\nimport { Card } from \"@material-ui/core\";\n\nconst Details = ({ item }) => {\n  console.log(\"item\", item);\n\n  return (\n    <div className=\"info\">\n      <h1>Details</h1>\n      <div className=\"list\">Name: {item.name}</div>\n      <div className=\"list\"> Address: {item.location.address}</div>\n      <div className=\"list\"> Url: {item.url}</div>\n      <div className=\"list\"> Price: {item.price_range}</div>\n      <div className=\"list\"> Currency: {item.photos}</div>\n      <div className=\"list\"> Highlights: {item.highlights}</div>\n    </div>\n  );\n};\n\nexport default Details;\n","/home/hamida/Documents/project3/src/components/RestaurantList.js",[],"/home/hamida/Documents/project3/src/components/Restaurant.js",[],"/home/hamida/Documents/project3/src/components/CitiesList.js",["90","91","92","93","94","95"],"import React, { useContext } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { RestaurantContext } from \"../context/RestaurantContext\";\nimport {List, Grid, Typography, ListItem, ListItemText} from '@material-ui/core/';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\n\n\n\n\nconst CitiesList = () => {\n  const { cities, handleCitySelect, pending } = useContext(RestaurantContext);\n\n\n   \n  \n  return (\n    <div>\n        {/* {pending && <h2>Loading...</h2>}\n          <h1>CitiesList</h1>\n           \n              <ListItemText primary={city.name} />\n             <Button onClick={() => handleCitySelect(city)}>Select</Button>\n            </div> */}\n      \n      {pending && <h2>Loading...</h2>}\n      <h1>CitiesList</h1>\n      {cities &&\n        cities.map((city) => {\n          return (\n            <div className=\"city\">\n              <div className=\"cityName\">{city.name}</div>\n              <Button onClick={() => handleCitySelect(city)}>Select</Button>\n            </div>\n          );\n        })} \n   </div> \n  );\n};\n\nexport default CitiesList;\n\n\n\n/**\n * const useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    maxWidth: 752,\n  },\n  demo: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  title: {\n    margin: theme.spacing(4, 0, 2),\n  },\n}));\n\nfunction generate(element) {\n  return [0, 1, 2].map((value) =>\n    React.cloneElement(element, {\n      key: value,\n    }),\n  );\n}\n * \n *  const classes = useStyles();\n    const [dense, setDense] = React.useState(false);\n    const [secondary, setSecondary] = React.useState(false);\n */","/home/hamida/Documents/project3/src/context/RestaurantContext.js",[],"/home/hamida/Documents/project3/src/components/Footer.js",[],"/home/hamida/Documents/project3/src/components/Register.js",[],"/home/hamida/Documents/project3/src/components/config/fbConfig.js",["96"],"\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyB5DDO90mPzAvCPnr4hVAVbFC9Bi847W2E\",\n    authDomain: \"zomato-21859.firebaseapp.com\",\n    projectId: \"zomato-21859\",\n    storageBucket: \"zomato-21859.appspot.com\",\n    messagingSenderId: \"279369610059\",\n    appId: \"1:279369610059:web:5c8943e7c58af5df69eece\",\n    measurementId: \"G-HQMMSNY8RB\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\n\n\n var db = firebase.firestore();\n export const firestore = firebase.firestore();\n  export default firebase;","/home/hamida/Documents/project3/src/components/Login.js",[],"/home/hamida/Documents/project3/src/context/AuthContext.js",["97","98","99","100","101"],"import React, { useEffect, useState } from \"react\";\nimport { useHistory, Redirect } from \"react-router-dom\";\n/* import { useCollectionData } from 'react-firebase-hooks/firestore'; */\nimport firebase from \"../components/config/fbConfig\";\nconst db = firebase.firestore();\n\nexport const AuthContext = React.createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [pending, setPending] = useState(false);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  /* const [messages, setMessages] = useState([]); */\n  /*  const [user] = useAuthState(auth); */\n\n  let history = useHistory();\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        setCurrentUser({ email: user.email, displayName: user.displayName });\n        setIsAuthenticated(true);\n      } else {\n        // No user is signed in.\n      }\n    });\n  }, []);\n\n  const handleSignUp = async ({ name, email, password }) => {\n    console.log(password, \"password\");\n    console.log(name, \"name\");\n    try {\n      const userCredential = await firebase\n        .auth()\n        .createUserWithEmailAndPassword(email, password);\n\n      //userCredential is just user it not printing the name of the user\n      console.log(userCredential, \"userCredential\");\n\n      let user = userCredential.user;\n      console.log(userCredential.user, \"userCredential\");\n      //user is just user it not printing the name of the user\n      console.log(\"user\", user);\n\n      // Add a new document in collection \"users\"\n      await user.updateProfile({\n        displayName: name,\n        photoURL: \"https://example.com/jane-q-user/profile.jpg\",\n      });\n      // Update successful.\n      setCurrentUser({ email: user.email, displayName: user.displayName });\n      setIsAuthenticated(true);\n    } catch (error) {\n      console.log(\"error\", error);\n      // An error happened.\n    }\n  };\n\n  const handleLogin = async ({ email, password }) => {\n    console.log(\"email\", email);\n\n    try {\n      const userCredential = await firebase\n        .auth()\n        .signInWithEmailAndPassword(email, password);\n\n      let user = userCredential.user;\n      console.log(\"user\", user);\n\n      setCurrentUser(user);\n      setIsAuthenticated(true);\n      history.push(\"/chatRoom\");\n    } catch (error) {\n      alert(error);\n    }\n  };\n\n  return (\n    <AuthContext.Provider value={{ currentUser, handleSignUp, handleLogin }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n\n\n","/home/hamida/Documents/project3/src/components/NavTabs.js",["102","103","104"],"import React,{useContext} from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport {Link, useHistory} from \"react-router-dom\"\nimport { RestaurantContext } from \"../context/RestaurantContext\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\n\nexport default function NavTabs() {\n\n   let history = useHistory()\n   console.log(history,\"history\")\n   let tab \n   switch(history.location.pathname.toLowerCase()) {\n     case \"/\": tab= 0\n     break;\n     case \"/citiesList\": tab= 1\n     break;\n     case \"/restaurantList\": tab= 2\n     break;\n     case \"/restaurant\": tab= 3\n     break;\n     case \"/register\": tab= 4\n     break;\n     case \"/login\": tab= 5\n     break;\n     case \"/chatRoom\": tab= 6\n     break;\n     default:tab = 0\n   }\n\n  const classes = useStyles();\n  const [selectedTab, setSelectedTab] = React.useState(tab);\n  const { cities, handleCitySelect, pending } = useContext(RestaurantContext);\n\n  const handleChange = (event, newValue) => {\n    setSelectedTab(newValue);\n  };\n \nreturn (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Tabs variant=\"fullWidth\" value={selectedTab}  onChange={handleChange}>\n          <Tab value=\"selectedTab\" component={Link} to='/' label= \"Home\"  />\n          <Tab component={Link} to='/citiesList' label=\"CitiesList\"  />\n          <Tab component={Link} to='/restaurantList' label=\"RestaurantList\"  />\n          <Tab component={Link} to='/restaurant' label=\"Restaurants\"  />\n          <Tab component={Link} to='/register' label=\"Register\"/>\n          <Tab component={Link} to='/login' label=\"Login\"  />\n          <Tab component={Link} to='/chatRoom' label=\"ChatRoom\"  />\n        </Tabs>\n      </AppBar>\n    </div>\n  );\n};","/home/hamida/Documents/project3/src/components/ChatRoom.js",["105","106","107","108","109"],"/home/hamida/Documents/project3/src/components/ChatMessage.js",[],"/home/hamida/Documents/project3/src/context/ChatContext.js",["110","111","112"],"import React, { createContext, useState, useEffect, useContext } from \"react\";\nimport { AuthContext } from \"./AuthContext\";\nimport { useHistory } from \"react-router-dom\";\n\n// 2 create config.js, import and gitignore\nimport firebase from \"../components/config/fbConfig\";\n\nconst initContext = {\n  messages: [],\n  getMessages: () => {\n    throw new Error(\"getMessages() not implemented\");\n  },\n  writeMessages: () => {\n    throw new Error(\"writeMessages() not implemented\");\n  },\n};\n\n//update router and wrap auth provider\n\nexport const ChatContext = createContext(initContext);\n\nexport const ChatContextProvider = ({ children }) => {\n  const [messages, setMessages] = useState(initContext.messages);\n  let history = useHistory();\n  const { currentUser } = useContext(AuthContext);\n  const db = firebase.firestore();\n\n  useEffect(() => {\n    getMessages();\n  }, []);\n\n  const writeMessages = async (msg) => {\n    console.log(currentUser);\n    db.collection(\"messages\")\n      .add({\n        displayName: currentUser.displayName,\n        text: msg,\n        createdAt: new Date(),\n      })\n      .then((docRef) => {\n        console.log(\"Document written with ID: \", docRef.id);\n      })\n      .catch((error) => {\n        console.error(\"Error adding document: \", error);\n      });\n    console.log(msg);\n  };\n\n  const getMessages = () => {\n   \n    db.collection(\"messages\")\n      .get()\n      .then((querySnapshot) => {\n\n        let chatMessages = [];\n\n        querySnapshot.forEach((doc) => {\n          console.log(doc.data());\n          console.log(`${doc.id} => ${doc.data()}`);\n\n          chatMessages.push(doc.data());\n        });\n        console.log(chatMessages);\n        setMessages(chatMessages);\n      });\n    \n  };\n\n  useEffect(() => {\n    getMessages();\n    console.log(messages);\n  }, []);\n\n  return (\n    <ChatContext.Provider value={{ messages, getMessages, writeMessages }}>\n      {children}\n    </ChatContext.Provider>\n  );\n};\n",{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":6,"column":8,"nodeType":"119","messageId":"120","endLine":6,"endColumn":14},{"ruleId":"117","severity":1,"message":"121","line":2,"column":10,"nodeType":"119","messageId":"120","endLine":2,"endColumn":14},{"ruleId":"117","severity":1,"message":"122","line":4,"column":9,"nodeType":"119","messageId":"120","endLine":4,"endColumn":13},{"ruleId":"117","severity":1,"message":"123","line":4,"column":15,"nodeType":"119","messageId":"120","endLine":4,"endColumn":19},{"ruleId":"117","severity":1,"message":"124","line":4,"column":21,"nodeType":"119","messageId":"120","endLine":4,"endColumn":31},{"ruleId":"117","severity":1,"message":"125","line":4,"column":33,"nodeType":"119","messageId":"120","endLine":4,"endColumn":41},{"ruleId":"117","severity":1,"message":"126","line":4,"column":43,"nodeType":"119","messageId":"120","endLine":4,"endColumn":55},{"ruleId":"117","severity":1,"message":"127","line":5,"column":10,"nodeType":"119","messageId":"120","endLine":5,"endColumn":20},{"ruleId":"117","severity":1,"message":"128","line":21,"column":6,"nodeType":"119","messageId":"120","endLine":21,"endColumn":8},{"ruleId":"117","severity":1,"message":"129","line":2,"column":22,"nodeType":"119","messageId":"120","endLine":2,"endColumn":30},{"ruleId":"117","severity":1,"message":"128","line":5,"column":7,"nodeType":"119","messageId":"120","endLine":5,"endColumn":9},{"ruleId":"117","severity":1,"message":"130","line":11,"column":10,"nodeType":"119","messageId":"120","endLine":11,"endColumn":17},{"ruleId":"117","severity":1,"message":"131","line":11,"column":19,"nodeType":"119","messageId":"120","endLine":11,"endColumn":29},{"ruleId":"117","severity":1,"message":"132","line":12,"column":10,"nodeType":"119","messageId":"120","endLine":12,"endColumn":25},{"ruleId":"117","severity":1,"message":"133","line":43,"column":11,"nodeType":"119","messageId":"120","endLine":43,"endColumn":17},{"ruleId":"117","severity":1,"message":"134","line":43,"column":19,"nodeType":"119","messageId":"120","endLine":43,"endColumn":35},{"ruleId":"117","severity":1,"message":"130","line":43,"column":37,"nodeType":"119","messageId":"120","endLine":43,"endColumn":44},{"ruleId":"117","severity":1,"message":"135","line":1,"column":47,"nodeType":"119","messageId":"120","endLine":1,"endColumn":56},{"ruleId":"117","severity":1,"message":"136","line":2,"column":8,"nodeType":"119","messageId":"120","endLine":2,"endColumn":19},{"ruleId":"117","severity":1,"message":"137","line":3,"column":10,"nodeType":"119","messageId":"120","endLine":3,"endColumn":15},{"ruleId":"117","severity":1,"message":"138","line":10,"column":7,"nodeType":"119","messageId":"120","endLine":10,"endColumn":11},{"ruleId":"117","severity":1,"message":"128","line":11,"column":7,"nodeType":"119","messageId":"120","endLine":11,"endColumn":9},{"ruleId":"117","severity":1,"message":"139","line":24,"column":7,"nodeType":"119","messageId":"120","endLine":24,"endColumn":14},{"ruleId":"140","severity":1,"message":"141","line":30,"column":6,"nodeType":"142","endLine":30,"endColumn":8,"suggestions":"143"},{"ruleId":"140","severity":1,"message":"144","line":72,"column":6,"nodeType":"142","endLine":72,"endColumn":8,"suggestions":"145"},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","'List' is defined but never used.","'Grid' is defined but never used.","'Typography' is defined but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","'makeStyles' is defined but never used.","'db' is assigned a value but never used.","'Redirect' is defined but never used.","'pending' is assigned a value but never used.","'setPending' is assigned a value but never used.","'isAuthenticated' is assigned a value but never used.","'cities' is assigned a value but never used.","'handleCitySelect' is assigned a value but never used.","'useEffect' is defined but never used.","'ChatMessage' is defined but never used.","'Paper' is defined but never used.","'auth' is assigned a value but never used.","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMessages'. Either include it or remove the dependency array.","ArrayExpression",["148"],"React Hook useEffect has missing dependencies: 'getMessages' and 'messages'. Either include them or remove the dependency array.",["149"],"no-global-assign","no-unsafe-negation",{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},"Update the dependencies array to be: [getMessages]",{"range":"154","text":"155"},"Update the dependencies array to be: [getMessages, messages]",{"range":"156","text":"157"},[859,861],"[getMessages]",[1790,1792],"[getMessages, messages]"]